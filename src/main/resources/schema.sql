CREATE TABLE IF NOT EXISTS `genres` (
    `id` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` varchar(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS `rating` (
    `id` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS `films` (
    `id` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `name` varchar(100) NOT NULL,
    `description` varchar(200) NOT NULL,
    `releaseDate` datetime,
    `duration` int NOT NULL,
    `rating_id` integer //references "rating" ("id")
);

CREATE TABLE IF NOT EXISTS `film_genres` (
    `film_id` integer, //REFERENCES "films" ("id") ON DELETE CASCADE,
    `genre_id` integer //REFERENCES "genres" ("id")
);

CREATE TABLE IF NOT EXISTS `users` (
    `id`  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `email` varchar NOT NULL,
    `login` varchar(100) NOT NULL,
    `name` varchar(255),
    `birthday` datetime,
    `friends` int
);

CREATE TABLE IF NOT EXISTS `like` (
  `film_id` integer, //REFERENCES "films" ("id") ON DELETE CASCADE,
  `user_id` integer //REFERENCES "users" ("id") ON DELETE CASCADE,
);

CREATE TABLE IF NOT EXISTS `status` (
    `id` INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    `title` varchar(100) NOT NULL DEFAULT 'не подтвержденна'
);


CREATE TABLE IF NOT EXISTS `friends` (
  `user_id` integer, //INTEGER REFERENCES "users" ("id") ON DELETE CASCADE,
  `other_id` integer, //INTEGER REFERENCES "users" ("id") ON DELETE CASCADE,
  `status_id` integer //INTEGER REFERENCES "status" ("id"),
);

ALTER TABLE "FILM_GENRES" ADD FOREIGN KEY (FILM_ID) REFERENCES "FILMS" (ID)  ON DELETE CASCADE;

ALTER TABLE "FILM_GENRES" ADD FOREIGN KEY (GENRE_ID) REFERENCES "GENRES" (ID);

ALTER TABLE RATING ADD FOREIGN KEY (ID) REFERENCES "films" (`rating_id`);

ALTER TABLE "LIKE" ADD FOREIGN KEY (FILM_ID) REFERENCES "films" (`id`) ON DELETE CASCADE;

ALTER TABLE "LIKE" ADD FOREIGN KEY (USER_ID) REFERENCES "users" (`id`) ON DELETE CASCADE;

ALTER TABLE FRIENDS ADD FOREIGN KEY (USER_ID) REFERENCES "users" (`id`) ON DELETE CASCADE;

ALTER TABLE FRIENDS ADD FOREIGN KEY (STATUS_ID) REFERENCES "status" (`id`) ;

ALTER TABLE FRIENDS ADD FOREIGN KEY (OTHER_ID) REFERENCES "users" (`id`) ON DELETE CASCADE;
// Поле "OTHER_ID" таблицы "FRIENDS" ссылается на поле "id" таблицы "users"

